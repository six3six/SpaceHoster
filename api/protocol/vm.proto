syntax = "proto3";

package protocol;
option go_package = "github.com/six3six/SpaceHoster/protocol";


enum Status {
  STOPPED = 0;
  PREPARED = 1;
  CREATED = 2;
  SETUP = 3;
  RUNNING = 5;
  ABORTED = 6;
  DELETED = 7;
}

enum Code {
  OK = 0;
  BAD_TOKEN = 1;
  NOT_ALLOWED = 2;
  NOT_ENOUGH_RESOURCES = 3;
}

message VmSpecification {
  int32 core = 1;
  int32 memory = 2;
  int32 storage = 3;
}

message CreateVmRequest {
  string token = 1;
  string name = 2;
  VmSpecification specification = 3;
}

message ModifyVmRequest {
  string token = 1;
  int32 id = 2;
  VmSpecification specification = 3;
}

message CreateVmResponse {

  Code code = 1;
  string name = 2;
  int32 id = 3;
}

message VmRequest {
  string token = 1;
  int32 id = 2;
}

message StatusVmResponse {
  Code code = 1;

  Status status = 2;
  string message = 3;
}

message JustTokenRequest {
  string token = 1;
}

message ListVmResponse {
  Code code = 1;
  repeated int32 id = 2;
}

message FreeResourcesResponse {
  Code code = 1;
  VmSpecification free = 2;
  VmSpecification total = 3;
}



service VmService {
  rpc Create(CreateVmRequest) returns (CreateVmResponse) {
  };
  rpc Start(VmRequest) returns (StatusVmResponse) {
  };
  rpc Stop(VmRequest) returns (StatusVmResponse) {
  };
  rpc Restart(VmRequest) returns (StatusVmResponse) {
  };
  rpc Modify(ModifyVmRequest) returns (StatusVmResponse) {
  };
  rpc Delete(VmRequest) returns (StatusVmResponse) {
  };
  rpc Status(VmRequest) returns (StatusVmResponse) {
  };
  rpc List(JustTokenRequest) returns (ListVmResponse) {
  };
  rpc FreeResources(JustTokenRequest) returns (FreeResourcesResponse) {
  };
}
